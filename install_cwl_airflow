#!/bin/bash
export PATH=${HOME}/anaconda/condabin:$PATH:${HOME}/NSAPHclimate/bin
export CONDA_ENVFILE=$CONDA_ENV.yml
cd /dependencies
if [ -f "${CONDA_ENVFILE}" ] ;
then
  echo 'installing env from file'
  conda env create -f ${CONDA_ENVFILE} --prefix=${HOME}/anaconda/envs/${CONDA_ENV}
  source /root/anaconda/etc/profile.d/conda.sh
  echo 'from /root/anaconda/etc/profile.d/conda.sh'
  conda activate ${HOME}/anaconda/envs/${CONDA_ENV}
  conda install -y -c conda-forge psycopg2 apache-airflow-providers-postgres apache-airflow-providers-mysql numpy scipy apache-airflow=2.0.1 dataclasses rpy2
  cd /cwl-airflow
  pip3 install .
  pip3 install --upgrade apache-airflow-providers-google
  unzip /dependencies/artifacts.zip -d /nsaphutils
  pip3 install cwltool cwlref-runner wheel /nsaphutils/dist/nsaph_utils-0.0.4.1-py3-none-any.whl
  pip3 install SQLAlchemy==1.3.23 --force-reinstall
  R -e "install.packages('remotes', repos='https://cran.cmm.msu.ru')"
  R -e "remotes::install_github('czigler/arepa', repos='https://cran.cmm.msu.ru')"
  exit
else
  echo 'installing default env'
  
  conda create -y --name NSAPHclimate python=3.8
  conda install -y -c r r -n NSAPHclimate
  conda install -y numpy scipy dataclasses -n NSAPHclimate
  conda install -y -c conda-forge rpy2 -n NSAPHclimate
  pip3 install numpy scipy
  conda init bash
  conda activate NSAPHclimate
  R -e "install.packages('remotes') remotes::install_github('czigler/arepa') q()"
  exit
fi
echo 'build ended'