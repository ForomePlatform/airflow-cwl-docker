version: '3'
services:
  postgres:
    image: postgres:13
    container_name: postgres
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRE_USER:-airflow}
      POSTGRES_PASSWORD: ${POSTGRE_PASS:-airflow}
      POSTGRES_DB: ${POSTGRE_DB:-airflow}
  scheduler:
    image: ${AIRFLOW_IMAGE_NAME:-myairflow}
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    user: root
    depends_on:
      - postgres
      - webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor      
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRE_USER:-airflow}:${POSTGRE_PASS:-airflow}@postgres/${POSTGRE_DB:-airflow}
      AIRFLOW__CORE__FERNET_KEY:
      AIRFLOW_CONN_METADATA_DB: postgresql+psycopg2://${POSTGRE_USER:-airflow}:${POSTGRE_PASS:-airflow}@postgres/${POSTGRE_DB:-airflow}
      AIRFLOW_VAR__METADATA_DB_SCHEMA: ${POSTGRE_DB:-airflow}
      AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 10
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
    volumes:
      - ${DAGS_DIR:-./dags}:/opt/airflow/dags
      - ${LOGS_DIR:-./airflow-logs}:/opt/airflow/logs
    command: scheduler
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://webserver:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 3
  
  webserver:
    image: ${AIRFLOW_IMAGE_NAME:-myairflow}
    build:
      context: .
      dockerfile: Dockerfile
    container_name: webserver
    restart: always
    user: root
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRE_USER:-airflow}:${POSTGRE_PASS:-airflow}@postgres/${POSTGRE_DB:-airflow}
      AIRFLOW__CORE__FERNET_KEY:
      AIRFLOW_CONN_METADATA_DB: postgresql+psycopg2://${POSTGRE_USER:-airflow}:${POSTGRE_PASS:-airflow}@postgres/${POSTGRE_DB:-airflow}
      AIRFLOW_VAR__METADATA_DB_SCHEMA: ${POSTGRE_DB:-airflow}
      AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 10
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'true'
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow} 
    volumes:
      - ${DAGS_DIR:-./dags}:/opt/airflow/dags
      - ${SCRIPTS_DIR:-./scripts}:/opt/airflow/scripts
      - ${LOGS_DIR:-./airflow-logs}:/opt/airflow/logs
    ports:
      - "8080:8080"
    command: airflow webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
volumes:
  postgres-db-volume:
