version: '3'

x-aliases:
  - &airflow_build_params
      build:
        context: .
        dockerfile: Dockerfile
        args:
          CONDA_ENV: ${CONDA_ENV}

  - &airflow_env
      environment:
        AIRFLOW__CORE__EXECUTOR: LocalExecutor
        AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRE_USER:-airflow}:${POSTGRE_PASS:-airflow}@${POSTGRE_SERVER:-postgres}/${POSTGRE_DB:-airflow}
        AIRFLOW__CORE__FERNET_KEY:
        AIRFLOW_CONN_METADATA_DB: postgresql+psycopg2://${POSTGRE_USER:-airflow}:${POSTGRE_PASS:-airflow}@${POSTGRE_SERVER:-postgres}/${POSTGRE_DB:-airflow}
        AIRFLOW_VAR__METADATA_DB_SCHEMA: ${POSTGRE_DB:-airflow}
        AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 10
        AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
        AIRFLOW__CORE__LOAD_EXAMPLES: ${AIRFLOW__CORE__LOAD_EXAMPLES:-False}
        AIRFLOW__CORE__DAGS_FOLDER: ${DAGS_FOLDER:-/opt/airflow/dags}
        _AIRFLOW_DB_UPGRADE: 'true'
        _AIRFLOW_WWW_USER_CREATE: 'true'
        _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
        _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
        AIRFLOW__WEBSERVER__BASE_URL: ${BASE_URL:-http://localhost:8080}
        AIRFLOW__LOGGING__BASE_LOG_FOLDER: "/opt/airflow/logs"
        PROJECT_DIR: "/opt/airflow/project"
        CONDA_ENV: ${CONDA_ENV}
        NO_PROXY: localhost,127.0.0.1,8.8.8.8,google.com,security.debian.org,repo.mysql.com,deb.debian.org,172.17.0.1,webserver,scheduler
        no_proxy: localhost,127.0.0.1,8.8.8.8,google.com,security.debian.org,repo.mysql.com,deb.debian.org,172.17.0.1,webserver,scheduler

  - &airflow_volumes
      volumes:
        - ${PROJECT_DIR:-./project}:/opt/airflow/project
        - ${DAGS_DIR:-./dags}:/opt/airflow/dags
        - ${LOGS_DIR:-./airflow-logs}:/opt/airflow/logs
        - ${CWL_TMP_FOLDER:-./cwl_tmp_folder}:/opt/airflow/project/temp/cwl_tmp_folder
        - ${CWL_INPUTS_FOLDER:-./cwl_inputs_folder}:/opt/airflow/project/temp/cwl_inputs_folder
        - ${CWL_OUTPUTS_FOLDER:-./cwl_outputs_folder}:/opt/airflow/project/temp/cwl_outputs_folder
        - ${CWL_PICKLE_FOLDER:-./cwl_pickle_folder}:/opt/airflow/project/temp/cwl_pickle_folder
        - type: bind
          source: /var/run/docker.sock
          target: /var/run/docker.sock

services:
  postgres:
    image: postgres:13
    container_name: postgres
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRE_USER:-airflow}
      POSTGRES_PASSWORD: ${POSTGRE_PASS:-airflow}
      POSTGRES_DB: ${POSTGRE_DB:-airflow}
  scheduler:
    image: ${AIRFLOW_IMAGE_NAME:-myairflow-conda}
    <<: *airflow_build_params
    restart: always
    user: root
    container_name: scheduler
    depends_on:
      - webserver
    <<: *airflow_env
    <<: *airflow_volumes
    command: [ "airflow", "scheduler" ]

  webserver:
    image: ${AIRFLOW_IMAGE_NAME:-myairflow-conda}
    <<: *airflow_build_params
    container_name: webserver
    restart: always
    user: root
    <<: *airflow_env
    <<: *airflow_volumes
    ports:
      - "${WEB_SERVER_PORT:-8080}:8080"
    command: [ "airflow", "webserver" ]
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
volumes:
  postgres-db-volume:
